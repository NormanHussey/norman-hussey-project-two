header {
    background-color: $colourPrimaryLight;
    font-family: $fontOswald;
    text-transform: uppercase;
    height: 100vh;

    @include mq-tablet() {
        padding-top: 5vh;
        height: 95vh;
    }

    nav {
        background-color: $colourPrimaryLight;
        @include flexFullCentre();
        ul {
            margin: 1%;
            @include flexBetween();
            align-items: center;

            @include mq-tablet() {
                flex-direction: column;
                position: fixed;
                top: -100%;
                left: 0;
                width: 100%;
                z-index: 20;
                background-color: rgba(0, 0, 0, 0.9);
                height: 0;
                margin: 0;
                padding: 25% 0;
                overflow: hidden;
                transition: all 0.3s;
            }

            li {
                margin: 0 30px;

                &:nth-child(3) {
                    @include mq-tablet() {
                        display: none;
                    }
                }
            }

            a {
                @include mq-tablet() {
                    font-size: 4rem;
                    color: white;
                }
            }

        }

        h2 {
            font-size: 4rem;
        }

        a {
            &:hover,
            &:focus {
                color: white;
                @include mq-tablet() {
                    color: $colourAccent;
                }
            }
        }
        
        .current {
            color: white;
            @include mq-tablet() {
                color: $colourAccent;
            }
        }

    }

    .wrapper {
        @include flexFullCentre();
        height: 100%;

        @include mq-desktop-small() {
            align-items: stretch;
        }
    }
}

.headerContent {

    @include flexBetween();

    @include mq-desktop-small() {
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .imgContainer {
        flex-basis: 42%;
        transform: translateY(10%);
        background-color: white;

        @include mq-desktop-small() {
            flex-basis: auto;
            width: 25%;
        }

        @include mq-tablet() {
            width: 50%;
        }

        @include mq-mobile-large() {
            width: 60%;
        }

        // Compensating for the excess white space in the image asset and creating a faux box-shadow
        img {
            // Crop the white space from the right and bottom sides of the image asset (which moves the image to the bottom right of the container)
            object-position: 20px 20px;
            // Apply padding to the sides that were cropped so the image now sits in the centre of the image container
            padding: 0 20px 20px 0;
            // Make the image larger than its container so that it pops out of it (the image pops out of the bottom right which creates a box-shadow effect but in the opposite direction)
            width: calc(100% + 40px);
            height: calc(100% + 40px);
            // Use negative margin to move the image up and to the left by 20px (which is the size of the faux box-shadow)
            margin: -20px -20px;
            // Use translate to move the image up and to the left by another 20px to move it out of its container and thus creating the faux box-shadow effect
            transform: translate(-20px, -20px);

            // It might seem redundant to use negative margin to move the image part of the way and then translate to move it the rest of the way instead of just choosing one of them to move it the full 40px. However, using just negative margin causes the image to compress along the vertical axis when the viewport is resized and using just translate causes the image to compress along the horizontal axis when the viewport is resized. By using both techniques together, the image maintains its proper aspect ratio no matter how the viewport is resized.
        }
    }

    .contentContainer {
        @include flexFullCentre();
        flex-basis: 50%;

        img {
            order: 1;
            width: 50%;
            height: 25%;
            transform: translate(-70%, -25%);
        }

        h1 {
            order: 0;
            font-size: 15rem;
            position: relative;

            // Using an after element to add the "Everyday Life with" image to the h1
            // I chose this method for two reasons:
            // 1. It allows the image to scale properly with the h1 and to always maintain its proper position regardless of the viewport size
            // 2. This method actually allows the text in the image to be more accessible to screen readers. Instead of having an img with alt text to convey the meaning to screen readers, I instead used a span with an sr-only class inside the h1 itself. This way, the screen reader would read it as one complete sentence "Everyday life with Harper" instead of in the disjointed manner that would result from having it as two separate elements.
            &::after {
                content: '';
                background-image: url('../assets/circle-text.png');
                background-repeat: no-repeat;
                background-size: contain;
                width: 100%;
                height: 100%;
                position: absolute;
                top: -25%;
                left: 75%;
                z-index: 1;
            }

            @include mq-desktop-small() {
                font-size: 11rem;
            }

            @include mq-tablet() {
                font-size: 10rem;
            }

            @include mq-mobile-large() {
                font-size: 8rem;
            }

            @include mq-mobile-small() {
                font-size: 6rem;
            }
        }
    }

}

button.hamburger {
    display: none;
    background-color: transparent;
    padding: 0;

    @include mq-tablet() {
        display: block;
        position: fixed;
        top: 1%;
        right: 5%;
        z-index: 20;
        color: $colourAccent;
        font-size: 4.5rem;
        text-shadow: 1px 1px $colourDark;
    }

}

// This class is used by menuScript.js to make the tablet/mobile menu functional
.open {
    top: 0;
    height: 100%;
}